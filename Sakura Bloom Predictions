{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["tJVyYglk61Mp","bolGUVee67eT","Q3B92m3kqPJG","IAhOIYbGKkqd","cPlDfe66q585","Cov8zGvAtg7u"],"authorship_tag":"ABX9TyMh2e2L2LjyZn7QaLYXqFI4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Sakura Bloom Prediction 2025 ðŸŒ¸  \n","\n","This project aims to predict the first and full bloom dates of cherry blossoms in 2025 using historical data from the Japan Meteorological Agency (JMA). The dataset spans from 1953 to 2024, covering various observation sites across Japan. By analyzing past bloom patterns, we can identify trends and develop a model to estimate the upcoming season's bloom dates.  \n","\n","The data was sourced from JMA, which maintains extensive records on cherry blossom blooming trends. Their official reports provide valuable insights into how bloom timings have shifted over the years.  \n","\n","This project will involve data cleaning, trend analysis, and forecasting to make accurate predictions for 2025. Stay tuned for progress updates! ðŸŒ¸  \n"],"metadata":{"id":"aF0Sx8Hsxsjp"}},{"cell_type":"markdown","source":["## Import Libraries and Data"],"metadata":{"id":"tJVyYglk61Mp"}},{"cell_type":"code","execution_count":65,"metadata":{"id":"zDOE5oVfxGnD","executionInfo":{"status":"ok","timestamp":1743046883531,"user_tz":300,"elapsed":39,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}}},"outputs":[],"source":["#Import Libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import warnings\n","warnings.simplefilter(action='ignore', category=FutureWarning)"]},{"cell_type":"code","source":["# Mount Google Drive (if using Google Colab)\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i854JE2V28OZ","executionInfo":{"status":"ok","timestamp":1743038344520,"user_tz":300,"elapsed":419,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}},"outputId":"72057d73-f5a0-4557-f76e-154c94f4ce3f"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["# Load the datasets\n","first_bloom = pd.read_csv('/content/drive/MyDrive/Sakura/sakura_first_bloom_dates.csv')\n","full_bloom = pd.read_csv('/content/drive/MyDrive/Sakura/sakura_full_bloom_dates.csv')\n","\n","# Display the first few rows\n","print(display(first_bloom.head()))\n","print(display(full_bloom.head()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"zyMsczKe3ZWj","executionInfo":{"status":"ok","timestamp":1743038344587,"user_tz":300,"elapsed":65,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}},"outputId":"991d3088-5a4d-43b1-bb20-db919b7d2523"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["   Site Name  Currently Being Observed        1953        1954        1955  \\\n","0   Wakkanai                      True  1953-05-21  1954-05-17  1955-05-17   \n","1      Rumoi                     False  1953-05-08  1954-05-11  1955-05-13   \n","2  Asahikawa                      True  1953-05-11  1954-05-13  1955-05-09   \n","3   Abashiri                      True  1953-05-24  1954-05-16  1955-05-18   \n","4    Sapporo                      True  1953-05-07  1954-05-04  1955-05-11   \n","\n","         1956        1957        1958        1959        1960  ...  \\\n","0  1956-05-12  1957-05-18  1958-05-23  1959-05-03  1960-05-19  ...   \n","1  1956-05-08  1957-05-10  1958-05-12         NaN         NaN  ...   \n","2  1956-05-07  1957-05-09  1958-05-10  1959-05-08  1960-05-13  ...   \n","3  1956-05-09         NaN         NaN  1959-05-03         NaN  ...   \n","4  1956-05-04  1957-05-09         NaN  1959-05-05  1960-05-05  ...   \n","\n","         2017        2018        2019        2020        2021        2022  \\\n","0  2017-05-09  2018-05-12  2019-05-07  2020-05-10  2021-05-08  2022-05-06   \n","1         NaN         NaN         NaN         NaN         NaN         NaN   \n","2  2017-05-03  2018-04-30  2019-05-01  2020-05-03  2021-04-29  2022-04-26   \n","3  2017-05-05  2018-05-02  2019-05-05  2020-05-07  2021-05-06  2022-04-27   \n","4  2017-04-28  2018-04-26  2019-04-24  2020-04-30  2021-04-22  2022-04-23   \n","\n","         2023        2024 30 Year Average 1981-2010  \\\n","0  2023-05-03  2024-05-01                      5 13   \n","1         NaN         NaN                         -   \n","2  2023-04-25  2024-04-24                       5 4   \n","3  2023-04-28  2024-04-28                      5 10   \n","4  2023-04-15  2024-04-18                       5 1   \n","\n","                               Notes  \n","0  Sargent cherry (Prunus sargentii)  \n","1  Sargent cherry (Prunus sargentii)  \n","2  Sargent cherry (Prunus sargentii)  \n","3  Sargent cherry (Prunus sargentii)  \n","4                                NaN  \n","\n","[5 rows x 76 columns]"],"text/html":["\n","  <div id=\"df-92ee1d73-eae8-4eff-b988-707d4155818a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Site Name</th>\n","      <th>Currently Being Observed</th>\n","      <th>1953</th>\n","      <th>1954</th>\n","      <th>1955</th>\n","      <th>1956</th>\n","      <th>1957</th>\n","      <th>1958</th>\n","      <th>1959</th>\n","      <th>1960</th>\n","      <th>...</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2021</th>\n","      <th>2022</th>\n","      <th>2023</th>\n","      <th>2024</th>\n","      <th>30 Year Average 1981-2010</th>\n","      <th>Notes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wakkanai</td>\n","      <td>True</td>\n","      <td>1953-05-21</td>\n","      <td>1954-05-17</td>\n","      <td>1955-05-17</td>\n","      <td>1956-05-12</td>\n","      <td>1957-05-18</td>\n","      <td>1958-05-23</td>\n","      <td>1959-05-03</td>\n","      <td>1960-05-19</td>\n","      <td>...</td>\n","      <td>2017-05-09</td>\n","      <td>2018-05-12</td>\n","      <td>2019-05-07</td>\n","      <td>2020-05-10</td>\n","      <td>2021-05-08</td>\n","      <td>2022-05-06</td>\n","      <td>2023-05-03</td>\n","      <td>2024-05-01</td>\n","      <td>5 13</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rumoi</td>\n","      <td>False</td>\n","      <td>1953-05-08</td>\n","      <td>1954-05-11</td>\n","      <td>1955-05-13</td>\n","      <td>1956-05-08</td>\n","      <td>1957-05-10</td>\n","      <td>1958-05-12</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Asahikawa</td>\n","      <td>True</td>\n","      <td>1953-05-11</td>\n","      <td>1954-05-13</td>\n","      <td>1955-05-09</td>\n","      <td>1956-05-07</td>\n","      <td>1957-05-09</td>\n","      <td>1958-05-10</td>\n","      <td>1959-05-08</td>\n","      <td>1960-05-13</td>\n","      <td>...</td>\n","      <td>2017-05-03</td>\n","      <td>2018-04-30</td>\n","      <td>2019-05-01</td>\n","      <td>2020-05-03</td>\n","      <td>2021-04-29</td>\n","      <td>2022-04-26</td>\n","      <td>2023-04-25</td>\n","      <td>2024-04-24</td>\n","      <td>5 4</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Abashiri</td>\n","      <td>True</td>\n","      <td>1953-05-24</td>\n","      <td>1954-05-16</td>\n","      <td>1955-05-18</td>\n","      <td>1956-05-09</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1959-05-03</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>2017-05-05</td>\n","      <td>2018-05-02</td>\n","      <td>2019-05-05</td>\n","      <td>2020-05-07</td>\n","      <td>2021-05-06</td>\n","      <td>2022-04-27</td>\n","      <td>2023-04-28</td>\n","      <td>2024-04-28</td>\n","      <td>5 10</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sapporo</td>\n","      <td>True</td>\n","      <td>1953-05-07</td>\n","      <td>1954-05-04</td>\n","      <td>1955-05-11</td>\n","      <td>1956-05-04</td>\n","      <td>1957-05-09</td>\n","      <td>NaN</td>\n","      <td>1959-05-05</td>\n","      <td>1960-05-05</td>\n","      <td>...</td>\n","      <td>2017-04-28</td>\n","      <td>2018-04-26</td>\n","      <td>2019-04-24</td>\n","      <td>2020-04-30</td>\n","      <td>2021-04-22</td>\n","      <td>2022-04-23</td>\n","      <td>2023-04-15</td>\n","      <td>2024-04-18</td>\n","      <td>5 1</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 76 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92ee1d73-eae8-4eff-b988-707d4155818a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-92ee1d73-eae8-4eff-b988-707d4155818a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-92ee1d73-eae8-4eff-b988-707d4155818a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2507c8df-b4b1-45f5-8180-16fd61ac9a81\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2507c8df-b4b1-45f5-8180-16fd61ac9a81')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2507c8df-b4b1-45f5-8180-16fd61ac9a81 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["None\n"]},{"output_type":"display_data","data":{"text/plain":["   Site Name  Currently Being Observed        1953        1954        1955  \\\n","0   Wakkanai                      True  1953-05-30  1954-05-27  1955-05-23   \n","1      Rumoi                     False  1953-05-13  1954-05-17  1955-05-16   \n","2  Asahikawa                      True  1953-05-16  1954-05-18  1955-05-14   \n","3   Abashiri                      True  1953-05-26  1954-05-19  1955-05-20   \n","4    Sapporo                      True  1953-05-14  1954-05-08  1955-05-16   \n","\n","         1956        1957        1958        1959        1960  ...  \\\n","0  1956-05-14  1957-05-22  1958-05-25  1959-05-12  1960-05-24  ...   \n","1  1956-05-14  1957-05-14  1958-05-16         NaN         NaN  ...   \n","2  1956-05-13  1957-05-14  1958-05-15  1959-05-13  1960-05-16  ...   \n","3  1956-05-13         NaN         NaN  1959-05-07         NaN  ...   \n","4  1956-05-09  1957-05-13         NaN  1959-05-10  1960-05-09  ...   \n","\n","         2017        2018        2019        2020        2021        2022  \\\n","0  2017-05-11  2018-05-15  2019-05-09  2020-05-12  2021-05-11  2022-05-09   \n","1         NaN         NaN         NaN         NaN         NaN         NaN   \n","2  2017-05-05  2018-05-01  2019-05-04  2020-05-04  2021-05-03  2022-04-28   \n","3  2017-05-07  2018-05-06  2019-05-07  2020-05-09  2021-05-07  2022-04-30   \n","4  2017-05-03  2018-04-29  2019-04-29  2020-05-02  2021-04-27  2022-04-25   \n","\n","         2023        2024 30 Year Average 1981-2010  \\\n","0  2023-05-05  2024-05-04                      5 16   \n","1         NaN         NaN                         -   \n","2  2023-04-28  2024-04-26                       5 7   \n","3  2023-05-01  2024-04-30                      5 13   \n","4  2023-04-21  2024-04-24                       5 6   \n","\n","                               Notes  \n","0  Sargent cherry (Prunus sargentii)  \n","1  Sargent cherry (Prunus sargentii)  \n","2  Sargent cherry (Prunus sargentii)  \n","3  Sargent cherry (Prunus sargentii)  \n","4                                NaN  \n","\n","[5 rows x 76 columns]"],"text/html":["\n","  <div id=\"df-7ff358d5-2efb-4062-9784-aa98fd850699\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Site Name</th>\n","      <th>Currently Being Observed</th>\n","      <th>1953</th>\n","      <th>1954</th>\n","      <th>1955</th>\n","      <th>1956</th>\n","      <th>1957</th>\n","      <th>1958</th>\n","      <th>1959</th>\n","      <th>1960</th>\n","      <th>...</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2021</th>\n","      <th>2022</th>\n","      <th>2023</th>\n","      <th>2024</th>\n","      <th>30 Year Average 1981-2010</th>\n","      <th>Notes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wakkanai</td>\n","      <td>True</td>\n","      <td>1953-05-30</td>\n","      <td>1954-05-27</td>\n","      <td>1955-05-23</td>\n","      <td>1956-05-14</td>\n","      <td>1957-05-22</td>\n","      <td>1958-05-25</td>\n","      <td>1959-05-12</td>\n","      <td>1960-05-24</td>\n","      <td>...</td>\n","      <td>2017-05-11</td>\n","      <td>2018-05-15</td>\n","      <td>2019-05-09</td>\n","      <td>2020-05-12</td>\n","      <td>2021-05-11</td>\n","      <td>2022-05-09</td>\n","      <td>2023-05-05</td>\n","      <td>2024-05-04</td>\n","      <td>5 16</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Rumoi</td>\n","      <td>False</td>\n","      <td>1953-05-13</td>\n","      <td>1954-05-17</td>\n","      <td>1955-05-16</td>\n","      <td>1956-05-14</td>\n","      <td>1957-05-14</td>\n","      <td>1958-05-16</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Asahikawa</td>\n","      <td>True</td>\n","      <td>1953-05-16</td>\n","      <td>1954-05-18</td>\n","      <td>1955-05-14</td>\n","      <td>1956-05-13</td>\n","      <td>1957-05-14</td>\n","      <td>1958-05-15</td>\n","      <td>1959-05-13</td>\n","      <td>1960-05-16</td>\n","      <td>...</td>\n","      <td>2017-05-05</td>\n","      <td>2018-05-01</td>\n","      <td>2019-05-04</td>\n","      <td>2020-05-04</td>\n","      <td>2021-05-03</td>\n","      <td>2022-04-28</td>\n","      <td>2023-04-28</td>\n","      <td>2024-04-26</td>\n","      <td>5 7</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Abashiri</td>\n","      <td>True</td>\n","      <td>1953-05-26</td>\n","      <td>1954-05-19</td>\n","      <td>1955-05-20</td>\n","      <td>1956-05-13</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1959-05-07</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>2017-05-07</td>\n","      <td>2018-05-06</td>\n","      <td>2019-05-07</td>\n","      <td>2020-05-09</td>\n","      <td>2021-05-07</td>\n","      <td>2022-04-30</td>\n","      <td>2023-05-01</td>\n","      <td>2024-04-30</td>\n","      <td>5 13</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sapporo</td>\n","      <td>True</td>\n","      <td>1953-05-14</td>\n","      <td>1954-05-08</td>\n","      <td>1955-05-16</td>\n","      <td>1956-05-09</td>\n","      <td>1957-05-13</td>\n","      <td>NaN</td>\n","      <td>1959-05-10</td>\n","      <td>1960-05-09</td>\n","      <td>...</td>\n","      <td>2017-05-03</td>\n","      <td>2018-04-29</td>\n","      <td>2019-04-29</td>\n","      <td>2020-05-02</td>\n","      <td>2021-04-27</td>\n","      <td>2022-04-25</td>\n","      <td>2023-04-21</td>\n","      <td>2024-04-24</td>\n","      <td>5 6</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 76 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ff358d5-2efb-4062-9784-aa98fd850699')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ff358d5-2efb-4062-9784-aa98fd850699 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ff358d5-2efb-4062-9784-aa98fd850699');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a656ccb-e8cb-47cc-a3a4-e729f5dc73ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a656ccb-e8cb-47cc-a3a4-e729f5dc73ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a656ccb-e8cb-47cc-a3a4-e729f5dc73ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["None\n"]}]},{"cell_type":"markdown","source":["## Data Understanding"],"metadata":{"id":"bolGUVee67eT"}},{"cell_type":"code","source":["# Check the shape of the datasets (rows, columns)\n","print(\"First Bloom Data Shape:\", first_bloom.shape)\n","print(\"Full Bloom Data Shape:\", full_bloom.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BHq-Jeoh50Ed","executionInfo":{"status":"ok","timestamp":1743038344842,"user_tz":300,"elapsed":7,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}},"outputId":"35c00686-ad7e-4e66-e272-64805198e3f2"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["First Bloom Data Shape: (102, 76)\n","Full Bloom Data Shape: (102, 76)\n"]}]},{"cell_type":"code","source":["# Display column names\n","print(\"Columns in First Bloom Data:\", first_bloom.columns)\n","print(\"Columns in Full Bloom Data:\", full_bloom.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lfawdedX6JiH","executionInfo":{"status":"ok","timestamp":1743038345674,"user_tz":300,"elapsed":4,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}},"outputId":"2085d49f-291e-4082-9101-e1d962c35f75"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Columns in First Bloom Data: Index(['Site Name', 'Currently Being Observed', '1953', '1954', '1955', '1956',\n","       '1957', '1958', '1959', '1960', '1961', '1962', '1963', '1964', '1965',\n","       '1966', '1967', '1968', '1969', '1970', '1971', '1972', '1973', '1974',\n","       '1975', '1976', '1977', '1978', '1979', '1980', '1981', '1982', '1983',\n","       '1984', '1985', '1986', '1987', '1988', '1989', '1990', '1991', '1992',\n","       '1993', '1994', '1995', '1996', '1997', '1998', '1999', '2000', '2001',\n","       '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010',\n","       '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019',\n","       '2020', '2021', '2022', '2023', '2024', '30 Year Average 1981-2010',\n","       'Notes'],\n","      dtype='object')\n","Columns in Full Bloom Data: Index(['Site Name', 'Currently Being Observed', '1953', '1954', '1955', '1956',\n","       '1957', '1958', '1959', '1960', '1961', '1962', '1963', '1964', '1965',\n","       '1966', '1967', '1968', '1969', '1970', '1971', '1972', '1973', '1974',\n","       '1975', '1976', '1977', '1978', '1979', '1980', '1981', '1982', '1983',\n","       '1984', '1985', '1986', '1987', '1988', '1989', '1990', '1991', '1992',\n","       '1993', '1994', '1995', '1996', '1997', '1998', '1999', '2000', '2001',\n","       '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010',\n","       '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019',\n","       '2020', '2021', '2022', '2023', '2024', '30 Year Average 1981-2010',\n","       'Notes'],\n","      dtype='object')\n"]}]},{"cell_type":"markdown","source":["The dataset consists of 102 observation sites across Japan, each recording **First Bloom** and **Full Bloom** dates with the following details:\n","\n","- **Site Name**: Name of the observation site.\n","- **Currently Being Observed**: Indicates if the site is actively monitored.\n","- **Year Columns (1953-2024)**: The bloom date (in days after January 1st) for 72 years, for both first and full bloom.\n","- **30 Year Average 1981-2010**: The average bloom date for this period.\n","- **Notes**: Additional observations.\n","\n","This dataset is valuable for analyzing trends in first and full bloom dates, studying the impact of climate change on bloom timing, and comparing bloom patterns across different regions of Japan."],"metadata":{"id":"GCzor7706bW-"}},{"cell_type":"markdown","source":["## Data Cleaning  "],"metadata":{"id":"Q3B92m3kqPJG"}},{"cell_type":"markdown","source":["### Data Preprocessing  \n","\n","The dataset undergoes preprocessing to ensure consistency and relevance for analysis. This includes:  \n","\n","- **Date Standardization:** Year columns are converted to datetime format to maintain uniformity in date representation.  \n","- **Filtering Relevant Records:** Rows where observations are not currently being made are removed, keeping only active data points.  "],"metadata":{"id":"IAhOIYbGKkqd"}},{"cell_type":"code","source":["# Create a copy of the original data for manipulation\n","first_bloom_clean = first_bloom.copy()\n","full_bloom_clean = full_bloom.copy()\n","\n","# Convert the year columns to datetime format\n","for year in range(1953, 2025):\n","    year_str = str(year)\n","    first_bloom_clean[year_str] = pd.to_datetime(first_bloom_clean[year_str], errors='coerce')\n","    full_bloom_clean[year_str] = pd.to_datetime(full_bloom_clean[year_str], errors='coerce')\n","\n","# Filter out rows where \"Currently Being Observed\" is False\n","first_bloom_clean = first_bloom_clean[first_bloom_clean['Currently Being Observed'] == True].reset_index(drop=True)\n","full_bloom_clean = full_bloom_clean[full_bloom_clean['Currently Being Observed'] == True].reset_index(drop=True)\n","\n","# Display data types, shape, and first few rows to verify transformations\n","display(first_bloom_clean.dtypes)\n","display(full_bloom_clean.dtypes)\n","display(first_bloom_clean.shape, full_bloom_clean.shape)\n","display(first_bloom_clean.head(), full_bloom_clean.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"jrMSpe5pIgfW","executionInfo":{"status":"ok","timestamp":1743046535658,"user_tz":300,"elapsed":93,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}},"outputId":"9729ffba-26f9-44a2-bcfb-5c63163fadb0"},"execution_count":58,"outputs":[{"output_type":"display_data","data":{"text/plain":["Site Name                            object\n","Currently Being Observed               bool\n","1953                         datetime64[ns]\n","1954                         datetime64[ns]\n","1955                         datetime64[ns]\n","                                  ...      \n","2022                         datetime64[ns]\n","2023                         datetime64[ns]\n","2024                         datetime64[ns]\n","30 Year Average 1981-2010            object\n","Notes                                object\n","Length: 76, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Site Name</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Currently Being Observed</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>1953</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>1954</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>1955</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>2023</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>2024</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>30 Year Average 1981-2010</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Notes</th>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>76 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Site Name                            object\n","Currently Being Observed               bool\n","1953                         datetime64[ns]\n","1954                         datetime64[ns]\n","1955                         datetime64[ns]\n","                                  ...      \n","2022                         datetime64[ns]\n","2023                         datetime64[ns]\n","2024                         datetime64[ns]\n","30 Year Average 1981-2010            object\n","Notes                                object\n","Length: 76, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Site Name</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Currently Being Observed</th>\n","      <td>bool</td>\n","    </tr>\n","    <tr>\n","      <th>1953</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>1954</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>1955</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>2023</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>2024</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>30 Year Average 1981-2010</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Notes</th>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>76 rows Ã— 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["(58, 76)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["(58, 76)"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   Site Name  Currently Being Observed       1953       1954       1955  \\\n","0   Wakkanai                      True 1953-05-21 1954-05-17 1955-05-17   \n","1  Asahikawa                      True 1953-05-11 1954-05-13 1955-05-09   \n","2   Abashiri                      True 1953-05-24 1954-05-16 1955-05-18   \n","3    Sapporo                      True 1953-05-07 1954-05-04 1955-05-11   \n","4    Obihiro                      True 1953-05-15 1954-05-07 1955-05-10   \n","\n","        1956       1957       1958       1959       1960  ...       2017  \\\n","0 1956-05-12 1957-05-18 1958-05-23 1959-05-03 1960-05-19  ... 2017-05-09   \n","1 1956-05-07 1957-05-09 1958-05-10 1959-05-08 1960-05-13  ... 2017-05-03   \n","2 1956-05-09        NaT        NaT 1959-05-03        NaT  ... 2017-05-05   \n","3 1956-05-04 1957-05-09        NaT 1959-05-05 1960-05-05  ... 2017-04-28   \n","4 1956-05-05 1957-05-09 1958-05-13 1959-05-01 1960-05-11  ... 2017-05-01   \n","\n","        2018       2019       2020       2021       2022       2023  \\\n","0 2018-05-12 2019-05-07 2020-05-10 2021-05-08 2022-05-06 2023-05-03   \n","1 2018-04-30 2019-05-01 2020-05-03 2021-04-29 2022-04-26 2023-04-25   \n","2 2018-05-02 2019-05-05 2020-05-07 2021-05-06 2022-04-27 2023-04-28   \n","3 2018-04-26 2019-04-24 2020-04-30 2021-04-22 2022-04-23 2023-04-15   \n","4 2018-04-27 2019-04-28 2020-05-02 2021-04-24 2022-04-22 2023-04-20   \n","\n","        2024 30 Year Average 1981-2010                              Notes  \n","0 2024-05-01                      5 13  Sargent cherry (Prunus sargentii)  \n","1 2024-04-24                       5 4  Sargent cherry (Prunus sargentii)  \n","2 2024-04-28                      5 10  Sargent cherry (Prunus sargentii)  \n","3 2024-04-18                       5 1                                NaN  \n","4 2024-04-23                       5 2  Sargent cherry (Prunus sargentii)  \n","\n","[5 rows x 76 columns]"],"text/html":["\n","  <div id=\"df-7c0cee41-d25f-4391-8ce4-bf353d7dd994\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Site Name</th>\n","      <th>Currently Being Observed</th>\n","      <th>1953</th>\n","      <th>1954</th>\n","      <th>1955</th>\n","      <th>1956</th>\n","      <th>1957</th>\n","      <th>1958</th>\n","      <th>1959</th>\n","      <th>1960</th>\n","      <th>...</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2021</th>\n","      <th>2022</th>\n","      <th>2023</th>\n","      <th>2024</th>\n","      <th>30 Year Average 1981-2010</th>\n","      <th>Notes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wakkanai</td>\n","      <td>True</td>\n","      <td>1953-05-21</td>\n","      <td>1954-05-17</td>\n","      <td>1955-05-17</td>\n","      <td>1956-05-12</td>\n","      <td>1957-05-18</td>\n","      <td>1958-05-23</td>\n","      <td>1959-05-03</td>\n","      <td>1960-05-19</td>\n","      <td>...</td>\n","      <td>2017-05-09</td>\n","      <td>2018-05-12</td>\n","      <td>2019-05-07</td>\n","      <td>2020-05-10</td>\n","      <td>2021-05-08</td>\n","      <td>2022-05-06</td>\n","      <td>2023-05-03</td>\n","      <td>2024-05-01</td>\n","      <td>5 13</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Asahikawa</td>\n","      <td>True</td>\n","      <td>1953-05-11</td>\n","      <td>1954-05-13</td>\n","      <td>1955-05-09</td>\n","      <td>1956-05-07</td>\n","      <td>1957-05-09</td>\n","      <td>1958-05-10</td>\n","      <td>1959-05-08</td>\n","      <td>1960-05-13</td>\n","      <td>...</td>\n","      <td>2017-05-03</td>\n","      <td>2018-04-30</td>\n","      <td>2019-05-01</td>\n","      <td>2020-05-03</td>\n","      <td>2021-04-29</td>\n","      <td>2022-04-26</td>\n","      <td>2023-04-25</td>\n","      <td>2024-04-24</td>\n","      <td>5 4</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Abashiri</td>\n","      <td>True</td>\n","      <td>1953-05-24</td>\n","      <td>1954-05-16</td>\n","      <td>1955-05-18</td>\n","      <td>1956-05-09</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>1959-05-03</td>\n","      <td>NaT</td>\n","      <td>...</td>\n","      <td>2017-05-05</td>\n","      <td>2018-05-02</td>\n","      <td>2019-05-05</td>\n","      <td>2020-05-07</td>\n","      <td>2021-05-06</td>\n","      <td>2022-04-27</td>\n","      <td>2023-04-28</td>\n","      <td>2024-04-28</td>\n","      <td>5 10</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sapporo</td>\n","      <td>True</td>\n","      <td>1953-05-07</td>\n","      <td>1954-05-04</td>\n","      <td>1955-05-11</td>\n","      <td>1956-05-04</td>\n","      <td>1957-05-09</td>\n","      <td>NaT</td>\n","      <td>1959-05-05</td>\n","      <td>1960-05-05</td>\n","      <td>...</td>\n","      <td>2017-04-28</td>\n","      <td>2018-04-26</td>\n","      <td>2019-04-24</td>\n","      <td>2020-04-30</td>\n","      <td>2021-04-22</td>\n","      <td>2022-04-23</td>\n","      <td>2023-04-15</td>\n","      <td>2024-04-18</td>\n","      <td>5 1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Obihiro</td>\n","      <td>True</td>\n","      <td>1953-05-15</td>\n","      <td>1954-05-07</td>\n","      <td>1955-05-10</td>\n","      <td>1956-05-05</td>\n","      <td>1957-05-09</td>\n","      <td>1958-05-13</td>\n","      <td>1959-05-01</td>\n","      <td>1960-05-11</td>\n","      <td>...</td>\n","      <td>2017-05-01</td>\n","      <td>2018-04-27</td>\n","      <td>2019-04-28</td>\n","      <td>2020-05-02</td>\n","      <td>2021-04-24</td>\n","      <td>2022-04-22</td>\n","      <td>2023-04-20</td>\n","      <td>2024-04-23</td>\n","      <td>5 2</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 76 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c0cee41-d25f-4391-8ce4-bf353d7dd994')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7c0cee41-d25f-4391-8ce4-bf353d7dd994 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7c0cee41-d25f-4391-8ce4-bf353d7dd994');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4595c266-ab6e-4975-a076-0ca2420840ee\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4595c266-ab6e-4975-a076-0ca2420840ee')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4595c266-ab6e-4975-a076-0ca2420840ee button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   Site Name  Currently Being Observed       1953       1954       1955  \\\n","0   Wakkanai                      True 1953-05-30 1954-05-27 1955-05-23   \n","1  Asahikawa                      True 1953-05-16 1954-05-18 1955-05-14   \n","2   Abashiri                      True 1953-05-26 1954-05-19 1955-05-20   \n","3    Sapporo                      True 1953-05-14 1954-05-08 1955-05-16   \n","4    Obihiro                      True 1953-05-19 1954-05-12 1955-05-14   \n","\n","        1956       1957       1958       1959       1960  ...       2017  \\\n","0 1956-05-14 1957-05-22 1958-05-25 1959-05-12 1960-05-24  ... 2017-05-11   \n","1 1956-05-13 1957-05-14 1958-05-15 1959-05-13 1960-05-16  ... 2017-05-05   \n","2 1956-05-13        NaT        NaT 1959-05-07        NaT  ... 2017-05-07   \n","3 1956-05-09 1957-05-13        NaT 1959-05-10 1960-05-09  ... 2017-05-03   \n","4 1956-05-09 1957-05-14 1958-05-16 1959-05-05 1960-05-15  ... 2017-05-02   \n","\n","        2018       2019       2020       2021       2022       2023  \\\n","0 2018-05-15 2019-05-09 2020-05-12 2021-05-11 2022-05-09 2023-05-05   \n","1 2018-05-01 2019-05-04 2020-05-04 2021-05-03 2022-04-28 2023-04-28   \n","2 2018-05-06 2019-05-07 2020-05-09 2021-05-07 2022-04-30 2023-05-01   \n","3 2018-04-29 2019-04-29 2020-05-02 2021-04-27 2022-04-25 2023-04-21   \n","4 2018-04-28 2019-04-30 2020-05-03 2021-04-27 2022-04-25 2023-04-22   \n","\n","        2024 30 Year Average 1981-2010                              Notes  \n","0 2024-05-04                      5 16  Sargent cherry (Prunus sargentii)  \n","1 2024-04-26                       5 7  Sargent cherry (Prunus sargentii)  \n","2 2024-04-30                      5 13  Sargent cherry (Prunus sargentii)  \n","3 2024-04-24                       5 6                                NaN  \n","4 2024-04-26                       5 5  Sargent cherry (Prunus sargentii)  \n","\n","[5 rows x 76 columns]"],"text/html":["\n","  <div id=\"df-90ae5c49-4593-486f-8367-65ff30208cdb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Site Name</th>\n","      <th>Currently Being Observed</th>\n","      <th>1953</th>\n","      <th>1954</th>\n","      <th>1955</th>\n","      <th>1956</th>\n","      <th>1957</th>\n","      <th>1958</th>\n","      <th>1959</th>\n","      <th>1960</th>\n","      <th>...</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2021</th>\n","      <th>2022</th>\n","      <th>2023</th>\n","      <th>2024</th>\n","      <th>30 Year Average 1981-2010</th>\n","      <th>Notes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wakkanai</td>\n","      <td>True</td>\n","      <td>1953-05-30</td>\n","      <td>1954-05-27</td>\n","      <td>1955-05-23</td>\n","      <td>1956-05-14</td>\n","      <td>1957-05-22</td>\n","      <td>1958-05-25</td>\n","      <td>1959-05-12</td>\n","      <td>1960-05-24</td>\n","      <td>...</td>\n","      <td>2017-05-11</td>\n","      <td>2018-05-15</td>\n","      <td>2019-05-09</td>\n","      <td>2020-05-12</td>\n","      <td>2021-05-11</td>\n","      <td>2022-05-09</td>\n","      <td>2023-05-05</td>\n","      <td>2024-05-04</td>\n","      <td>5 16</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Asahikawa</td>\n","      <td>True</td>\n","      <td>1953-05-16</td>\n","      <td>1954-05-18</td>\n","      <td>1955-05-14</td>\n","      <td>1956-05-13</td>\n","      <td>1957-05-14</td>\n","      <td>1958-05-15</td>\n","      <td>1959-05-13</td>\n","      <td>1960-05-16</td>\n","      <td>...</td>\n","      <td>2017-05-05</td>\n","      <td>2018-05-01</td>\n","      <td>2019-05-04</td>\n","      <td>2020-05-04</td>\n","      <td>2021-05-03</td>\n","      <td>2022-04-28</td>\n","      <td>2023-04-28</td>\n","      <td>2024-04-26</td>\n","      <td>5 7</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Abashiri</td>\n","      <td>True</td>\n","      <td>1953-05-26</td>\n","      <td>1954-05-19</td>\n","      <td>1955-05-20</td>\n","      <td>1956-05-13</td>\n","      <td>NaT</td>\n","      <td>NaT</td>\n","      <td>1959-05-07</td>\n","      <td>NaT</td>\n","      <td>...</td>\n","      <td>2017-05-07</td>\n","      <td>2018-05-06</td>\n","      <td>2019-05-07</td>\n","      <td>2020-05-09</td>\n","      <td>2021-05-07</td>\n","      <td>2022-04-30</td>\n","      <td>2023-05-01</td>\n","      <td>2024-04-30</td>\n","      <td>5 13</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sapporo</td>\n","      <td>True</td>\n","      <td>1953-05-14</td>\n","      <td>1954-05-08</td>\n","      <td>1955-05-16</td>\n","      <td>1956-05-09</td>\n","      <td>1957-05-13</td>\n","      <td>NaT</td>\n","      <td>1959-05-10</td>\n","      <td>1960-05-09</td>\n","      <td>...</td>\n","      <td>2017-05-03</td>\n","      <td>2018-04-29</td>\n","      <td>2019-04-29</td>\n","      <td>2020-05-02</td>\n","      <td>2021-04-27</td>\n","      <td>2022-04-25</td>\n","      <td>2023-04-21</td>\n","      <td>2024-04-24</td>\n","      <td>5 6</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Obihiro</td>\n","      <td>True</td>\n","      <td>1953-05-19</td>\n","      <td>1954-05-12</td>\n","      <td>1955-05-14</td>\n","      <td>1956-05-09</td>\n","      <td>1957-05-14</td>\n","      <td>1958-05-16</td>\n","      <td>1959-05-05</td>\n","      <td>1960-05-15</td>\n","      <td>...</td>\n","      <td>2017-05-02</td>\n","      <td>2018-04-28</td>\n","      <td>2019-04-30</td>\n","      <td>2020-05-03</td>\n","      <td>2021-04-27</td>\n","      <td>2022-04-25</td>\n","      <td>2023-04-22</td>\n","      <td>2024-04-26</td>\n","      <td>5 5</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 76 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90ae5c49-4593-486f-8367-65ff30208cdb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-90ae5c49-4593-486f-8367-65ff30208cdb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-90ae5c49-4593-486f-8367-65ff30208cdb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-69fa6048-e5b3-47b9-8a00-4afd3beb32b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69fa6048-e5b3-47b9-8a00-4afd3beb32b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-69fa6048-e5b3-47b9-8a00-4afd3beb32b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}}]},{"cell_type":"markdown","source":["### Checking Missing Values  \n","\n","In this step, we identify the missing values in both datasets for further analysis. This involves resetting the index for proper alignment and calculating the missing dates across the year columns (1953-2024) for each site in both the \"First Bloom\" and \"Full Bloom\" datasets."],"metadata":{"id":"cPlDfe66q585"}},{"cell_type":"code","source":["# Reset the index for both datasets to align the rows\n","first_bloom_clean = first_bloom_clean.reset_index(drop=True)\n","full_bloom_clean = full_bloom_clean.reset_index(drop=True)\n","\n","# Calculate missing values across the year columns (1953 to 2024) for each row (site)\n","missing_dates_first_bloom = first_bloom_clean[year_columns].isna().sum(axis=1)\n","missing_dates_full_bloom = full_bloom_clean[year_columns].isna().sum(axis=1)\n","\n","# Combine the results into a single DataFrame for visualization\n","missing_data_summary = pd.DataFrame({\n","    'Site': first_bloom_clean['Site Name'],\n","    'Missing Dates (First Bloom)': missing_dates_first_bloom,\n","    'Missing Dates (Full Bloom)': missing_dates_full_bloom\n","})\n","\n","# Display the summary of missing data\n","display(missing_data_summary)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"_SxA_ZcMQQd1","executionInfo":{"status":"ok","timestamp":1743046624084,"user_tz":300,"elapsed":56,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}},"outputId":"b799d569-4f6a-4b2a-b514-9fa9e77950ba"},"execution_count":59,"outputs":[{"output_type":"display_data","data":{"text/plain":["                   Site  Missing Dates (First Bloom)  \\\n","0              Wakkanai                            7   \n","1             Asahikawa                            0   \n","2              Abashiri                            5   \n","3               Sapporo                            1   \n","4               Obihiro                            0   \n","5               Kushiro                           19   \n","6               Muroran                            0   \n","7              Hakodate                            0   \n","8                Aomori                            3   \n","9                 Akita                            0   \n","10              Morioka                            0   \n","11             Yamagata                            0   \n","12               Sendai                            0   \n","13            Fukushima                            0   \n","14              Niigata                            0   \n","15             Kanazawa                            0   \n","16               Toyama                            0   \n","17               Nagano                            0   \n","18           Utsunomiya                            0   \n","19                Fukui                            0   \n","20             Maebashi                            0   \n","21             Kumagaya                            0   \n","22                 Mito                            0   \n","23                 Gifu                            0   \n","24               Nagoya                            0   \n","25                 Kofu                            0   \n","26               Choshi                            0   \n","27                  Tsu                            0   \n","28             Shizuoka                            0   \n","29          Tokyo Japan                            0   \n","30             Yokohama                            0   \n","31               Matsue                            0   \n","32              Tottori                            0   \n","33                Kyoto                            0   \n","34               Hikone                            0   \n","35            Hiroshima                            0   \n","36              Okayama                            0   \n","37                 Kobe                            0   \n","38                Osaka                            0   \n","39             Wakayama                            0   \n","40                 Nara                            1   \n","41            Matsuyama                            0   \n","42            Takamatsu                            0   \n","43                Kochi                            1   \n","44            Tokushima                            0   \n","45          Shimonoseki                            0   \n","46              Fukuoka                            0   \n","47                 Saga                            0   \n","48                 Oita                            0   \n","49             Nagasaki                            0   \n","50             Kumamoto                            0   \n","51            Kagoshima                            0   \n","52             Miyazaki                           18   \n","53                 Naze                           12   \n","54      Ishigaki Island                            3   \n","55           Miyakojima                           19   \n","56                 Naha                           21   \n","57  Minami Daito Island                           20   \n","\n","    Missing Dates (Full Bloom)  \n","0                            9  \n","1                            0  \n","2                            9  \n","3                            1  \n","4                            0  \n","5                            2  \n","6                            0  \n","7                            0  \n","8                            3  \n","9                            0  \n","10                           0  \n","11                           0  \n","12                           0  \n","13                           0  \n","14                           0  \n","15                           0  \n","16                           0  \n","17                           0  \n","18                           0  \n","19                           0  \n","20                           0  \n","21                           0  \n","22                           0  \n","23                           0  \n","24                           0  \n","25                           0  \n","26                           0  \n","27                           0  \n","28                           0  \n","29                           0  \n","30                           0  \n","31                           6  \n","32                           0  \n","33                           0  \n","34                           0  \n","35                           0  \n","36                           0  \n","37                           0  \n","38                           8  \n","39                           2  \n","40                           1  \n","41                           0  \n","42                           0  \n","43                           4  \n","44                           0  \n","45                           0  \n","46                           1  \n","47                           1  \n","48                           0  \n","49                           0  \n","50                           0  \n","51                           0  \n","52                           0  \n","53                          16  \n","54                          16  \n","55                          23  \n","56                          24  \n","57                          28  "],"text/html":["\n","  <div id=\"df-513d14f4-a910-41e5-ab6f-9c251c035f8a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Site</th>\n","      <th>Missing Dates (First Bloom)</th>\n","      <th>Missing Dates (Full Bloom)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wakkanai</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Asahikawa</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Abashiri</td>\n","      <td>5</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sapporo</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Obihiro</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Kushiro</td>\n","      <td>19</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Muroran</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Hakodate</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Aomori</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Akita</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Morioka</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Yamagata</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Sendai</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Fukushima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Niigata</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Kanazawa</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Toyama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Nagano</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Utsunomiya</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Fukui</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Maebashi</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Kumagaya</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Mito</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Gifu</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Nagoya</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Kofu</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Choshi</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Tsu</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Shizuoka</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Tokyo Japan</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Yokohama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Matsue</td>\n","      <td>0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Tottori</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Kyoto</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Hikone</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Hiroshima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>Okayama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Kobe</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>Osaka</td>\n","      <td>0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Wakayama</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Nara</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>Matsuyama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>Takamatsu</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Kochi</td>\n","      <td>1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Tokushima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>Shimonoseki</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>Fukuoka</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>Saga</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Oita</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Nagasaki</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Kumamoto</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Kagoshima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Miyazaki</td>\n","      <td>18</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Naze</td>\n","      <td>12</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>Ishigaki Island</td>\n","      <td>3</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Miyakojima</td>\n","      <td>19</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Naha</td>\n","      <td>21</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>Minami Daito Island</td>\n","      <td>20</td>\n","      <td>28</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-513d14f4-a910-41e5-ab6f-9c251c035f8a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-513d14f4-a910-41e5-ab6f-9c251c035f8a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-513d14f4-a910-41e5-ab6f-9c251c035f8a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-872316d0-e79a-4890-b883-a1dd17051bd3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-872316d0-e79a-4890-b883-a1dd17051bd3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-872316d0-e79a-4890-b883-a1dd17051bd3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_19b0f71f-64b4-46db-ac2f-81f9b43e25b6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('missing_data_summary')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_19b0f71f-64b4-46db-ac2f-81f9b43e25b6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('missing_data_summary');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"missing_data_summary","summary":"{\n  \"name\": \"missing_data_summary\",\n  \"rows\": 58,\n  \"fields\": [\n    {\n      \"column\": \"Site\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"Wakkanai\",\n          \"Kushiro\",\n          \"Hikone\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Missing Dates (First Bloom)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 21,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          21,\n          0,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Missing Dates (Full Bloom)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 0,\n        \"max\": 28,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          24,\n          23,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["### Data Imputation Using KNN**\n","\n","The dataset contains yearly records from 1953 to 2024, with missing values that need to be addressed for accurate analysis. **K-Nearest Neighbors (KNN) Imputation** is used to predict and fill these missing values based on similar data points.\n","\n","The process is carried out by the following steps:\n","- **Date Conversion to Numeric:** Dates are converted to **timestamps** to enable imputation.\n","- **KNN Imputation:** The **KNNImputer** with `n_neighbors=5` fills missing values based on the five nearest neighbors across the year columns (1953-2024).\n","- **Convert Back to Date Format:** Imputed values are converted back to the **datetime format** (YYYY-MM-DD).\n","- **Data Validation:** The imputed data is stored and displayed for verification."],"metadata":{"id":"Cov8zGvAtg7u"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.impute import KNNImputer\n","from sklearn.preprocessing import StandardScaler\n","from IPython.display import display\n","\n","# Define the year columns (1953 to 2024)\n","year_columns = [str(year) for year in range(1953, 2025)]\n","\n","# Function to convert dates to numeric representation (timestamps)\n","def convert_to_numeric(value):\n","    if pd.isnull(value):  # If the value is missing, return NaN for KNN to impute\n","        return float('nan')\n","    else:\n","        return pd.to_datetime(value).value  # Convert date to timestamp (numeric)\n","\n","# Function to convert numeric values back to datetime (removes time component)\n","def convert_to_datetime(value):\n","    if pd.notnull(value):\n","        return pd.to_datetime(value).normalize()  # Remove time component (set to midnight)\n","    return pd.NaT  # Keep NaT for missing values\n","\n","# Function to apply KNN imputation\n","def impute_data(dataset, year_columns):\n","    # Convert to numeric for both datasets (to numeric timestamps)\n","    dataset[year_columns] = dataset[year_columns].applymap(lambda x: convert_to_numeric(x) if pd.notnull(x) else float('nan'))\n","\n","    # Initialize KNN imputer for the entire dataset\n","    knn_imputer = KNNImputer(n_neighbors=5)\n","\n","    # Impute the missing values across all rows and columns\n","    imputed_data = knn_imputer.fit_transform(dataset[year_columns])\n","\n","    # Update the dataset with imputed values\n","    dataset[year_columns] = pd.DataFrame(imputed_data, columns=year_columns, index=dataset.index)\n","\n","    # Convert numeric imputed values back to datetime without the time component\n","    dataset[year_columns] = dataset[year_columns].applymap(lambda x: convert_to_datetime(x))\n","\n","    return dataset\n","\n","# Create copies of the cleaned data\n","first_bloom_clean_copy = first_bloom_clean.copy()\n","full_bloom_clean_copy = full_bloom_clean.copy()\n","\n","# Apply imputation for both datasets\n","first_bloom_clean_copy = impute_data(first_bloom_clean_copy, year_columns)\n","full_bloom_clean_copy = impute_data(full_bloom_clean_copy, year_columns)\n","\n","# Display the cleaned and imputed data (copies)\n","display(first_bloom_clean_copy.head())\n","display(full_bloom_clean_copy.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"O6nHaqaHsAGD","executionInfo":{"status":"ok","timestamp":1743046890618,"user_tz":300,"elapsed":781,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}},"outputId":"6f580deb-ee2e-4d50-b788-ed9a2292b087"},"execution_count":66,"outputs":[{"output_type":"display_data","data":{"text/plain":["   Site Name  Currently Being Observed       1953       1954       1955  \\\n","0   Wakkanai                      True 1953-05-21 1954-05-17 1955-05-17   \n","1  Asahikawa                      True 1953-05-11 1954-05-13 1955-05-09   \n","2   Abashiri                      True 1953-05-24 1954-05-16 1955-05-18   \n","3    Sapporo                      True 1953-05-07 1954-05-04 1955-05-11   \n","4    Obihiro                      True 1953-05-15 1954-05-07 1955-05-10   \n","\n","        1956       1957       1958       1959       1960  ...       2017  \\\n","0 1956-05-12 1957-05-18 1958-05-23 1959-05-03 1960-05-19  ... 2017-05-09   \n","1 1956-05-07 1957-05-09 1958-05-10 1959-05-08 1960-05-13  ... 2017-05-03   \n","2 1956-05-09 1957-05-10 1958-05-12 1959-05-03 1960-05-11  ... 2017-05-05   \n","3 1956-05-04 1957-05-09 1958-05-07 1959-05-05 1960-05-05  ... 2017-04-28   \n","4 1956-05-05 1957-05-09 1958-05-13 1959-05-01 1960-05-11  ... 2017-05-01   \n","\n","        2018       2019       2020       2021       2022       2023  \\\n","0 2018-05-12 2019-05-07 2020-05-10 2021-05-08 2022-05-06 2023-05-03   \n","1 2018-04-30 2019-05-01 2020-05-03 2021-04-29 2022-04-26 2023-04-25   \n","2 2018-05-02 2019-05-05 2020-05-07 2021-05-06 2022-04-27 2023-04-28   \n","3 2018-04-26 2019-04-24 2020-04-30 2021-04-22 2022-04-23 2023-04-15   \n","4 2018-04-27 2019-04-28 2020-05-02 2021-04-24 2022-04-22 2023-04-20   \n","\n","        2024 30 Year Average 1981-2010                              Notes  \n","0 2024-05-01                      5 13  Sargent cherry (Prunus sargentii)  \n","1 2024-04-24                       5 4  Sargent cherry (Prunus sargentii)  \n","2 2024-04-28                      5 10  Sargent cherry (Prunus sargentii)  \n","3 2024-04-18                       5 1                                NaN  \n","4 2024-04-23                       5 2  Sargent cherry (Prunus sargentii)  \n","\n","[5 rows x 76 columns]"],"text/html":["\n","  <div id=\"df-0b516e43-02a1-448f-803b-954cecc290bb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Site Name</th>\n","      <th>Currently Being Observed</th>\n","      <th>1953</th>\n","      <th>1954</th>\n","      <th>1955</th>\n","      <th>1956</th>\n","      <th>1957</th>\n","      <th>1958</th>\n","      <th>1959</th>\n","      <th>1960</th>\n","      <th>...</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2021</th>\n","      <th>2022</th>\n","      <th>2023</th>\n","      <th>2024</th>\n","      <th>30 Year Average 1981-2010</th>\n","      <th>Notes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wakkanai</td>\n","      <td>True</td>\n","      <td>1953-05-21</td>\n","      <td>1954-05-17</td>\n","      <td>1955-05-17</td>\n","      <td>1956-05-12</td>\n","      <td>1957-05-18</td>\n","      <td>1958-05-23</td>\n","      <td>1959-05-03</td>\n","      <td>1960-05-19</td>\n","      <td>...</td>\n","      <td>2017-05-09</td>\n","      <td>2018-05-12</td>\n","      <td>2019-05-07</td>\n","      <td>2020-05-10</td>\n","      <td>2021-05-08</td>\n","      <td>2022-05-06</td>\n","      <td>2023-05-03</td>\n","      <td>2024-05-01</td>\n","      <td>5 13</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Asahikawa</td>\n","      <td>True</td>\n","      <td>1953-05-11</td>\n","      <td>1954-05-13</td>\n","      <td>1955-05-09</td>\n","      <td>1956-05-07</td>\n","      <td>1957-05-09</td>\n","      <td>1958-05-10</td>\n","      <td>1959-05-08</td>\n","      <td>1960-05-13</td>\n","      <td>...</td>\n","      <td>2017-05-03</td>\n","      <td>2018-04-30</td>\n","      <td>2019-05-01</td>\n","      <td>2020-05-03</td>\n","      <td>2021-04-29</td>\n","      <td>2022-04-26</td>\n","      <td>2023-04-25</td>\n","      <td>2024-04-24</td>\n","      <td>5 4</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Abashiri</td>\n","      <td>True</td>\n","      <td>1953-05-24</td>\n","      <td>1954-05-16</td>\n","      <td>1955-05-18</td>\n","      <td>1956-05-09</td>\n","      <td>1957-05-10</td>\n","      <td>1958-05-12</td>\n","      <td>1959-05-03</td>\n","      <td>1960-05-11</td>\n","      <td>...</td>\n","      <td>2017-05-05</td>\n","      <td>2018-05-02</td>\n","      <td>2019-05-05</td>\n","      <td>2020-05-07</td>\n","      <td>2021-05-06</td>\n","      <td>2022-04-27</td>\n","      <td>2023-04-28</td>\n","      <td>2024-04-28</td>\n","      <td>5 10</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sapporo</td>\n","      <td>True</td>\n","      <td>1953-05-07</td>\n","      <td>1954-05-04</td>\n","      <td>1955-05-11</td>\n","      <td>1956-05-04</td>\n","      <td>1957-05-09</td>\n","      <td>1958-05-07</td>\n","      <td>1959-05-05</td>\n","      <td>1960-05-05</td>\n","      <td>...</td>\n","      <td>2017-04-28</td>\n","      <td>2018-04-26</td>\n","      <td>2019-04-24</td>\n","      <td>2020-04-30</td>\n","      <td>2021-04-22</td>\n","      <td>2022-04-23</td>\n","      <td>2023-04-15</td>\n","      <td>2024-04-18</td>\n","      <td>5 1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Obihiro</td>\n","      <td>True</td>\n","      <td>1953-05-15</td>\n","      <td>1954-05-07</td>\n","      <td>1955-05-10</td>\n","      <td>1956-05-05</td>\n","      <td>1957-05-09</td>\n","      <td>1958-05-13</td>\n","      <td>1959-05-01</td>\n","      <td>1960-05-11</td>\n","      <td>...</td>\n","      <td>2017-05-01</td>\n","      <td>2018-04-27</td>\n","      <td>2019-04-28</td>\n","      <td>2020-05-02</td>\n","      <td>2021-04-24</td>\n","      <td>2022-04-22</td>\n","      <td>2023-04-20</td>\n","      <td>2024-04-23</td>\n","      <td>5 2</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 76 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b516e43-02a1-448f-803b-954cecc290bb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b516e43-02a1-448f-803b-954cecc290bb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b516e43-02a1-448f-803b-954cecc290bb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f63eec9d-ae51-4ceb-ad25-d42b99d60f6c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f63eec9d-ae51-4ceb-ad25-d42b99d60f6c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f63eec9d-ae51-4ceb-ad25-d42b99d60f6c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   Site Name  Currently Being Observed       1953       1954       1955  \\\n","0   Wakkanai                      True 1953-05-30 1954-05-27 1955-05-23   \n","1  Asahikawa                      True 1953-05-16 1954-05-18 1955-05-14   \n","2   Abashiri                      True 1953-05-26 1954-05-19 1955-05-20   \n","3    Sapporo                      True 1953-05-14 1954-05-08 1955-05-16   \n","4    Obihiro                      True 1953-05-19 1954-05-12 1955-05-14   \n","\n","        1956       1957       1958       1959       1960  ...       2017  \\\n","0 1956-05-14 1957-05-22 1958-05-25 1959-05-12 1960-05-24  ... 2017-05-11   \n","1 1956-05-13 1957-05-14 1958-05-15 1959-05-13 1960-05-16  ... 2017-05-05   \n","2 1956-05-13 1957-05-15 1958-05-20 1959-05-07 1960-05-15  ... 2017-05-07   \n","3 1956-05-09 1957-05-13 1958-05-12 1959-05-10 1960-05-09  ... 2017-05-03   \n","4 1956-05-09 1957-05-14 1958-05-16 1959-05-05 1960-05-15  ... 2017-05-02   \n","\n","        2018       2019       2020       2021       2022       2023  \\\n","0 2018-05-15 2019-05-09 2020-05-12 2021-05-11 2022-05-09 2023-05-05   \n","1 2018-05-01 2019-05-04 2020-05-04 2021-05-03 2022-04-28 2023-04-28   \n","2 2018-05-06 2019-05-07 2020-05-09 2021-05-07 2022-04-30 2023-05-01   \n","3 2018-04-29 2019-04-29 2020-05-02 2021-04-27 2022-04-25 2023-04-21   \n","4 2018-04-28 2019-04-30 2020-05-03 2021-04-27 2022-04-25 2023-04-22   \n","\n","        2024 30 Year Average 1981-2010                              Notes  \n","0 2024-05-04                      5 16  Sargent cherry (Prunus sargentii)  \n","1 2024-04-26                       5 7  Sargent cherry (Prunus sargentii)  \n","2 2024-04-30                      5 13  Sargent cherry (Prunus sargentii)  \n","3 2024-04-24                       5 6                                NaN  \n","4 2024-04-26                       5 5  Sargent cherry (Prunus sargentii)  \n","\n","[5 rows x 76 columns]"],"text/html":["\n","  <div id=\"df-280bfad2-3da4-4a20-876b-110b36bd9342\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Site Name</th>\n","      <th>Currently Being Observed</th>\n","      <th>1953</th>\n","      <th>1954</th>\n","      <th>1955</th>\n","      <th>1956</th>\n","      <th>1957</th>\n","      <th>1958</th>\n","      <th>1959</th>\n","      <th>1960</th>\n","      <th>...</th>\n","      <th>2017</th>\n","      <th>2018</th>\n","      <th>2019</th>\n","      <th>2020</th>\n","      <th>2021</th>\n","      <th>2022</th>\n","      <th>2023</th>\n","      <th>2024</th>\n","      <th>30 Year Average 1981-2010</th>\n","      <th>Notes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wakkanai</td>\n","      <td>True</td>\n","      <td>1953-05-30</td>\n","      <td>1954-05-27</td>\n","      <td>1955-05-23</td>\n","      <td>1956-05-14</td>\n","      <td>1957-05-22</td>\n","      <td>1958-05-25</td>\n","      <td>1959-05-12</td>\n","      <td>1960-05-24</td>\n","      <td>...</td>\n","      <td>2017-05-11</td>\n","      <td>2018-05-15</td>\n","      <td>2019-05-09</td>\n","      <td>2020-05-12</td>\n","      <td>2021-05-11</td>\n","      <td>2022-05-09</td>\n","      <td>2023-05-05</td>\n","      <td>2024-05-04</td>\n","      <td>5 16</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Asahikawa</td>\n","      <td>True</td>\n","      <td>1953-05-16</td>\n","      <td>1954-05-18</td>\n","      <td>1955-05-14</td>\n","      <td>1956-05-13</td>\n","      <td>1957-05-14</td>\n","      <td>1958-05-15</td>\n","      <td>1959-05-13</td>\n","      <td>1960-05-16</td>\n","      <td>...</td>\n","      <td>2017-05-05</td>\n","      <td>2018-05-01</td>\n","      <td>2019-05-04</td>\n","      <td>2020-05-04</td>\n","      <td>2021-05-03</td>\n","      <td>2022-04-28</td>\n","      <td>2023-04-28</td>\n","      <td>2024-04-26</td>\n","      <td>5 7</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Abashiri</td>\n","      <td>True</td>\n","      <td>1953-05-26</td>\n","      <td>1954-05-19</td>\n","      <td>1955-05-20</td>\n","      <td>1956-05-13</td>\n","      <td>1957-05-15</td>\n","      <td>1958-05-20</td>\n","      <td>1959-05-07</td>\n","      <td>1960-05-15</td>\n","      <td>...</td>\n","      <td>2017-05-07</td>\n","      <td>2018-05-06</td>\n","      <td>2019-05-07</td>\n","      <td>2020-05-09</td>\n","      <td>2021-05-07</td>\n","      <td>2022-04-30</td>\n","      <td>2023-05-01</td>\n","      <td>2024-04-30</td>\n","      <td>5 13</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sapporo</td>\n","      <td>True</td>\n","      <td>1953-05-14</td>\n","      <td>1954-05-08</td>\n","      <td>1955-05-16</td>\n","      <td>1956-05-09</td>\n","      <td>1957-05-13</td>\n","      <td>1958-05-12</td>\n","      <td>1959-05-10</td>\n","      <td>1960-05-09</td>\n","      <td>...</td>\n","      <td>2017-05-03</td>\n","      <td>2018-04-29</td>\n","      <td>2019-04-29</td>\n","      <td>2020-05-02</td>\n","      <td>2021-04-27</td>\n","      <td>2022-04-25</td>\n","      <td>2023-04-21</td>\n","      <td>2024-04-24</td>\n","      <td>5 6</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Obihiro</td>\n","      <td>True</td>\n","      <td>1953-05-19</td>\n","      <td>1954-05-12</td>\n","      <td>1955-05-14</td>\n","      <td>1956-05-09</td>\n","      <td>1957-05-14</td>\n","      <td>1958-05-16</td>\n","      <td>1959-05-05</td>\n","      <td>1960-05-15</td>\n","      <td>...</td>\n","      <td>2017-05-02</td>\n","      <td>2018-04-28</td>\n","      <td>2019-04-30</td>\n","      <td>2020-05-03</td>\n","      <td>2021-04-27</td>\n","      <td>2022-04-25</td>\n","      <td>2023-04-22</td>\n","      <td>2024-04-26</td>\n","      <td>5 5</td>\n","      <td>Sargent cherry (Prunus sargentii)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 76 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-280bfad2-3da4-4a20-876b-110b36bd9342')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-280bfad2-3da4-4a20-876b-110b36bd9342 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-280bfad2-3da4-4a20-876b-110b36bd9342');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-87635c6a-89d8-466a-851e-bfc44f7fb0be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-87635c6a-89d8-466a-851e-bfc44f7fb0be')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-87635c6a-89d8-466a-851e-bfc44f7fb0be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}}]},{"cell_type":"markdown","source":["### Checking for Missing Values in the Imputed Data**\n","\n","\n","After performing KNN imputation, it's important to check for any remaining missing values and analyze their distribution. This involves resetting indexes and generating a summary table of missing data for each site, allowing for final verification."],"metadata":{"id":"CO3Xx2WGuBVp"}},{"cell_type":"code","source":["# Reset the index for both copied datasets to align the rows\n","first_bloom_clean_copy = first_bloom_clean_copy.reset_index(drop=True)\n","full_bloom_clean_copy = full_bloom_clean_copy.reset_index(drop=True)\n","\n","# Calculate missing values across the year columns (1953 to 2024) for each row (site) in the copied datasets\n","missing_dates_first_bloom_copy = first_bloom_clean_copy[year_columns].isna().sum(axis=1)\n","missing_dates_full_bloom_copy = full_bloom_clean_copy[year_columns].isna().sum(axis=1)\n","\n","# Combine the results into a single DataFrame for visualization\n","missing_data_summary_copy = pd.DataFrame({\n","    'Site': first_bloom_clean_copy['Site Name'],\n","    'Missing Dates (First Bloom)': missing_dates_first_bloom_copy,\n","    'Missing Dates (Full Bloom)': missing_dates_full_bloom_copy\n","})\n","\n","# Display the summary of missing data for the copied datasets\n","display(missing_data_summary_copy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"dxueBMGZrb-s","executionInfo":{"status":"ok","timestamp":1743046897896,"user_tz":300,"elapsed":69,"user":{"displayName":"Niv Raj","userId":"02543066166370561995"}},"outputId":"c68f97ee-9c41-44a7-b022-886ef2afe913"},"execution_count":67,"outputs":[{"output_type":"display_data","data":{"text/plain":["                   Site  Missing Dates (First Bloom)  \\\n","0              Wakkanai                            0   \n","1             Asahikawa                            0   \n","2              Abashiri                            0   \n","3               Sapporo                            0   \n","4               Obihiro                            0   \n","5               Kushiro                            0   \n","6               Muroran                            0   \n","7              Hakodate                            0   \n","8                Aomori                            0   \n","9                 Akita                            0   \n","10              Morioka                            0   \n","11             Yamagata                            0   \n","12               Sendai                            0   \n","13            Fukushima                            0   \n","14              Niigata                            0   \n","15             Kanazawa                            0   \n","16               Toyama                            0   \n","17               Nagano                            0   \n","18           Utsunomiya                            0   \n","19                Fukui                            0   \n","20             Maebashi                            0   \n","21             Kumagaya                            0   \n","22                 Mito                            0   \n","23                 Gifu                            0   \n","24               Nagoya                            0   \n","25                 Kofu                            0   \n","26               Choshi                            0   \n","27                  Tsu                            0   \n","28             Shizuoka                            0   \n","29          Tokyo Japan                            0   \n","30             Yokohama                            0   \n","31               Matsue                            0   \n","32              Tottori                            0   \n","33                Kyoto                            0   \n","34               Hikone                            0   \n","35            Hiroshima                            0   \n","36              Okayama                            0   \n","37                 Kobe                            0   \n","38                Osaka                            0   \n","39             Wakayama                            0   \n","40                 Nara                            0   \n","41            Matsuyama                            0   \n","42            Takamatsu                            0   \n","43                Kochi                            0   \n","44            Tokushima                            0   \n","45          Shimonoseki                            0   \n","46              Fukuoka                            0   \n","47                 Saga                            0   \n","48                 Oita                            0   \n","49             Nagasaki                            0   \n","50             Kumamoto                            0   \n","51            Kagoshima                            0   \n","52             Miyazaki                            0   \n","53                 Naze                            0   \n","54      Ishigaki Island                            0   \n","55           Miyakojima                            0   \n","56                 Naha                            0   \n","57  Minami Daito Island                            0   \n","\n","    Missing Dates (Full Bloom)  \n","0                            0  \n","1                            0  \n","2                            0  \n","3                            0  \n","4                            0  \n","5                            0  \n","6                            0  \n","7                            0  \n","8                            0  \n","9                            0  \n","10                           0  \n","11                           0  \n","12                           0  \n","13                           0  \n","14                           0  \n","15                           0  \n","16                           0  \n","17                           0  \n","18                           0  \n","19                           0  \n","20                           0  \n","21                           0  \n","22                           0  \n","23                           0  \n","24                           0  \n","25                           0  \n","26                           0  \n","27                           0  \n","28                           0  \n","29                           0  \n","30                           0  \n","31                           0  \n","32                           0  \n","33                           0  \n","34                           0  \n","35                           0  \n","36                           0  \n","37                           0  \n","38                           0  \n","39                           0  \n","40                           0  \n","41                           0  \n","42                           0  \n","43                           0  \n","44                           0  \n","45                           0  \n","46                           0  \n","47                           0  \n","48                           0  \n","49                           0  \n","50                           0  \n","51                           0  \n","52                           0  \n","53                           0  \n","54                           0  \n","55                           0  \n","56                           0  \n","57                           0  "],"text/html":["\n","  <div id=\"df-925ca61c-6352-466b-a5bd-943564c1d9e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Site</th>\n","      <th>Missing Dates (First Bloom)</th>\n","      <th>Missing Dates (Full Bloom)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Wakkanai</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Asahikawa</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Abashiri</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sapporo</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Obihiro</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Kushiro</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Muroran</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Hakodate</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Aomori</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Akita</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Morioka</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Yamagata</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Sendai</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Fukushima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Niigata</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Kanazawa</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Toyama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Nagano</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Utsunomiya</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Fukui</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Maebashi</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Kumagaya</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Mito</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Gifu</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Nagoya</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Kofu</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Choshi</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Tsu</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Shizuoka</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Tokyo Japan</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Yokohama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Matsue</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Tottori</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Kyoto</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Hikone</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Hiroshima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>Okayama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Kobe</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>Osaka</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Wakayama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Nara</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>Matsuyama</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>Takamatsu</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Kochi</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Tokushima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>Shimonoseki</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>Fukuoka</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>Saga</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Oita</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Nagasaki</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Kumamoto</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Kagoshima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Miyazaki</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Naze</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>Ishigaki Island</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Miyakojima</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Naha</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>Minami Daito Island</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-925ca61c-6352-466b-a5bd-943564c1d9e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-925ca61c-6352-466b-a5bd-943564c1d9e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-925ca61c-6352-466b-a5bd-943564c1d9e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-845708c6-b79b-4fda-9c0d-e36544624bcd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-845708c6-b79b-4fda-9c0d-e36544624bcd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-845708c6-b79b-4fda-9c0d-e36544624bcd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a6754e1a-cc7a-4915-b001-95236e47a936\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('missing_data_summary_copy')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a6754e1a-cc7a-4915-b001-95236e47a936 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('missing_data_summary_copy');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"missing_data_summary_copy","summary":"{\n  \"name\": \"missing_data_summary_copy\",\n  \"rows\": 58,\n  \"fields\": [\n    {\n      \"column\": \"Site\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"Wakkanai\",\n          \"Kushiro\",\n          \"Hikone\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Missing Dates (First Bloom)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Missing Dates (Full Bloom)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["The **KNN Imputer** fills missing values based on similar data points, ensuring accurate imputation. A final **missing values check** verifies the imputation's effectiveness, resulting in a **clean dataset** ready for further analysis."],"metadata":{"id":"X6sB4L8kuGz6"}},{"cell_type":"markdown","source":["## Modeling and Prediction"],"metadata":{"id":"nrMLzaTXwkPG"}},{"cell_type":"code","source":[],"metadata":{"id":"scOroWkhrpvv"},"execution_count":null,"outputs":[]}]}